image: docker:18-git

services:
  - docker:18-dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  PROJECT_NAME: connect-f7e5b
  GCR_HOST: eu.gcr.io
  CONTAINER_IMAGE: registry.gitlab.et-ns.net/$CI_PROJECT_PATH
  CONTAINER_IMAGE_TEST: registry.gitlab.et-ns.net/$CI_PROJECT_PATH/test
  CONTAINER_IMAGE_GCR: $GCR_HOST/$PROJECT_NAME/$CI_PROJECT_PATH
  VERSION: $CI_COMMIT_SHA

stages:
  - build
  - test
  - tag
  - deploy staging
  - deploy production

before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build_image:
  stage: build
  tags:
    - build
  script:
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA || true
    - cp ./client/src/config/config.dist.ts ./client/src/config/config.ts
    - docker build --cache-from $CONTAINER_IMAGE:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA

tag_latest:
  stage: tag
  only:
    refs:
      - master
  tags:
    - tag
  script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA || true
    - echo "$SERVICE_ACCOUNT_KEY" > key.json
    - cat key.json | docker login -u _json_key --password-stdin https://$GCR_HOST
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHA $CONTAINER_IMAGE_GCR:latest
    - docker push $CONTAINER_IMAGE_GCR:latest

tag_version:
  stage: tag
  only:
    refs:
      - /^v\d*\.\d*\.\d*$/
  except:
    - branches
  tags:
    - tag
  script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA || true
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHA $CONTAINER_IMAGE_GCR:$CI_COMMIT_REF_NAME
    - echo "$SERVICE_ACCOUNT_KEY" > key.json
    - cat key.json | docker login -u _json_key --password-stdin https://$GCR_HOST
    - docker push $CONTAINER_IMAGE_GCR:$CI_COMMIT_REF_NAME

deploy_staging:
  image: 'claranet/gcloud-kubectl-docker:latest'
  stage: deploy staging
  only:
    refs:
      - master
  tags:
    - deploy
  script:
    - VERSION=$CONTAINER_IMAGE_GCR:latest
    - echo "$SERVICE_ACCOUNT_KEY" > key.json
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.et-ns.net/connect/kubernetes.git /tmp/kubernetes
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud container clusters get-credentials staging-01 --zone europe-west2-c --project connect-f7e5b
    - cat /tmp/kubernetes/resources/deployments/style-guide/style-guide.yaml | envsubst | kubectl apply -f -
    - kubectl patch deployment style-guide -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"

deploy_staging_manual:
  image: 'claranet/gcloud-kubectl-docker:latest'
  stage: deploy staging
  when: manual
  except:
    - master
  tags:
    - deploy
  script:
    - VERSION=$CONTAINER_IMAGE:$CI_COMMIT_SHA
    - echo "$SERVICE_ACCOUNT_KEY" > key.json
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.et-ns.net/connect/kubernetes.git /tmp/kubernetes
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud container clusters get-credentials staging-01 --zone europe-west2-c --project connect-f7e5b
    - cat /tmp/kubernetes/resources/deployments/style-guide/style-guide.yaml | envsubst | kubectl apply -f -
    - kubectl patch deployment style-guide -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"

deploy_production:
  image: 'claranet/gcloud-kubectl-docker:latest'
  stage: deploy production
  when: manual
  only:
    refs:
      - /^v\d*\.\d*\.\d*$/
  except:
    - branches
  tags:
    - deploy
  script:
    - VERSION=$CONTAINER_IMAGE_GCR:$CI_COMMIT_REF_NAME
    - echo "$SERVICE_ACCOUNT_KEY" > key.json
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.et-ns.net/connect/kubernetes.git /tmp/kubernetes
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud container clusters get-credentials production-01 --zone europe-west2 --project connect-f7e5b
    - cat /tmp/kubernetes/resources/deployments/style-guide/style-guide.yaml | envsubst | kubectl apply -f -
    - kubectl patch deployment style-guide -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
